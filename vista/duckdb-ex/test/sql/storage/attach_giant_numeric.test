# name: test/sql/storage/attach_giant_numeric.test
# description: Test NUMERIC values that are very large (exceeding what DuckDB can handle regularly)
# group: [storage]

require postgres_scanner

require-env POSTGRES_TEST_DATABASE_AVAILABLE

statement ok
PRAGMA enable_verification

statement ok
ATTACH 'dbname=postgresscanner' AS s (TYPE POSTGRES)

# select from a NUMERIC field
query I
SELECT * FROM s.pg_giant_numeric
----
0.0
1.0000000000000002e+32
-1.234567891234568e+26

query I
SELECT * FROM s.pg_giant_numeric_array
----
[0.0, 1.0000000000000002e+32, -1.234567891234568e+26]
[]

# insert into a NUMERIC field
statement ok
DELETE FROM s.pg_numeric_empty

statement ok
INSERT INTO s.pg_numeric_empty
VALUES  (0), (99999999999999999999999999999999.99999999999999999999999999999999), (-123456789123456789123456789.123456789123456789123456789);

query I
SELECT * FROM s.pg_numeric_empty
----
0.0
1.0000000000000002e+32
-1.234567891234568e+26

statement ok
DELETE FROM s.pg_numeric_array_empty

statement ok
INSERT INTO s.pg_numeric_array_empty
VALUES  (ARRAY[0, 99999999999999999999999999999999.99999999999999999999999999999999, -123456789123456789123456789.123456789123456789123456789]), (ARRAY[]::NUMERIC[]);

query I
SELECT UNNEST(n) FROM s.pg_numeric_array_empty
----
0.0
1.0000000000000002e+32
-1.234567891234568e+26
